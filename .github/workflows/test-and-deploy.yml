name: Test and Deploy

on:
  push:
    branches: [ main, deploy ]
  pull_request:
    branches: [ main, deploy ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run unit tests
      run: npm run test:unit
      env:
        NODE_ENV: test
        TESTING: true
    
    - name: Run integration tests
      run: npm run test:integration
      env:
        NODE_ENV: test
        TESTING: true
        # Add test database credentials if needed
        # DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
    
    - name: Generate test coverage
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Cache test results
      uses: actions/cache@v3
      with:
        path: |
          coverage/
          test-results/
        key: ${{ runner.os }}-test-results-${{ matrix.node-version }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-test-results-${{ matrix.node-version }}-

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Check for known vulnerabilities
      run: npm audit --audit-level=high
    
    - name: Run dependency check
      run: npx audit-ci --moderate

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/deploy' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
    
    - name: Run post-deployment tests
      run: |
        echo "Waiting for deployment to complete..."
        sleep 60
        
        # Test health endpoint
        curl -f https://porter-preview.vercel.app/api/health || exit 1
        
        # Test OAuth status endpoint
        curl -f https://porter-preview.vercel.app/api/oauth/status || exit 1
        
        echo "Post-deployment tests passed!"
    
    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
          exit 1
        fi
